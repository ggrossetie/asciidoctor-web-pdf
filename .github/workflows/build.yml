name: Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'

jobs:
  build:
    strategy:
      matrix:
        os:
          - ubuntu-latest
        node-version:
          - 12.x
          - 14.x
        include:
          - os: ubuntu-latest
            node-version: '14.x'
            primary: true
    runs-on: ${{ matrix.os }}
    outputs:
      version: ${{ steps.package_info.outputs.version }}
    steps:
    - uses: actions/checkout@v2
    - name: Current version
      id: package_info
      run: |
        VERSION=$(node -e 'console.log(require("./package.json").version)')
        echo "::set-output name=version::v$VERSION"
    - name: Set up Node ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    # libgbm-dev is required by Puppeteer 3+
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgbm-dev ghostscript poppler-utils
      if: ${{ runner.os == 'Linux' }}
    - name: Install dependencies
      run: |
        npm ci
    - name: Lint and test
      run: |
        npm run lint
        npm t
    - name: Build binary
      run: |
        npm run build
      if: matrix.primary
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v2
      with:
        name: win-binary
        path: build/asciidoctor-web-pdf-win.zip
      if: matrix.primary
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v2
      with:
        name: mac-binary
        path: build/asciidoctor-web-pdf-mac.zip
      if: matrix.primary
    - name: Upload Linux artifact
      uses: actions/upload-artifact@v2
      with:
        name: linux-binary
        path: build/asciidoctor-web-pdf-linux.zip
      if: matrix.primary
  test-linux:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: linux-binary
      - name: Unzip
        run: |
          unzip asciidoctor-web-pdf-linux.zip -d out
      - name: Smoke test
        run: |
          cd out/asciidoctor-web-pdf-linux-${{ needs.build.outputs.version }}
          rm -rf basic.pdf
          ./asciidoctor-web-pdf ./examples/document/basic-example.adoc -o basic.pdf
          ls basic.pdf
          test -f basic.pdf -a -s basic.pdf
  test-macos:
    needs: build
    runs-on: macos-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: mac-binary
      - name: Unzip
        run: |
          unzip asciidoctor-web-pdf-mac.zip -d out
      - name: Smoke test
        run: |
          cd out/asciidoctor-web-pdf-mac-${{ needs.build.outputs.version }}
          rm -rf basic.pdf
          ./asciidoctor-web-pdf ./examples/document/basic-example.adoc -o basic.pdf
          ls basic.pdf
          test -f basic.pdf -a -s basic.pdf
  test-win:
    needs: build
    runs-on: windows-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: win-binary
      - name: Unzip
        run: |
          unzip asciidoctor-web-pdf-win.zip -d out
      - name: Smoke test
        run: |
          cd out\asciidoctor-web-pdf-win-${{ needs.build.outputs.version }}
          asciidoctor-web-pdf.exe examples\document\basic-example.adoc -o basic.pdf
          ls basic.pdf
        shell: cmd
